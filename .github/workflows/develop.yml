name: "DEV Deploy"

on: 
  push: 
    branches: 
      - develop

permissions: 
  id-token: write
  contents: read

jobs:
  setup-infra:
    uses: ./.github/workflows/terraform.yml
    with:
      environment: dev
      aws-assume-role-arn: "arn:aws:iam::503561450616:role/role-github-terraform-build"
      aws-statefile-s3-bucket: "503561450616-statefile-terraform"
      aws-lock-dynamodb-table: "503561450616-terraform-lock"
      aws-region: "us-east-1"


  process-data:
    runs-on: ubuntu-latest
    needs: setup-infra

    steps:
      - name: Checkout repository
        # if: steps.read-destroy-json.outputs.destroy != 'true'
        uses: actions/checkout@v3

      - name: Setup Python
        # if: steps.read-destroy-json.outputs.destroy != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        # if: steps.read-destroy-json.outputs.destroy != 'true'
        run: pip install pandas boto3 pyarrow

      - name: Process and Save Data to S3
        # if: steps.read-destroy-json.outputs.destroy != 'true'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ENVIRONMENT: dev
        run: python process_and_save_to_s3.py

  train-model:
    runs-on: ubuntu-latest
    needs: process-data
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set environment variable
        env:
          ENVIRONMENT: production # Altere conforme necess√°rio
        run: echo "ENVIRONMENT=$ENVIRONMENT"

      - name: Execute script
        env:
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
        run: python scripts/train.py